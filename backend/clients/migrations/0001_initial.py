# Generated by Django 5.2.7 on 2025-10-18 21:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_client', models.CharField(max_length=20, unique=True)),
                ('type_client', models.CharField(choices=[('particulier', 'Particulier'), ('entreprise', 'Entreprise'), ('institution', 'Institution')], max_length=15)),
                ('status', models.CharField(choices=[('actif', 'Actif'), ('en_attente', 'En attente'), ('inactif', 'Inactif'), ('suspendu', 'Suspendu'), ('prospect', 'Prospect')], default='actif', max_length=10)),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('secondary_phone', models.CharField(blank=True, max_length=20)),
                ('service_address', models.TextField()),
                ('service_city', models.CharField(max_length=100)),
                ('service_postal_code', models.CharField(max_length=20)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('billing_address', models.TextField(blank=True)),
                ('billing_city', models.CharField(blank=True, max_length=100)),
                ('billing_postal_code', models.CharField(blank=True, max_length=20)),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('derniere_collecte', models.DateTimeField(blank=True, null=True)),
                ('dernier_paiement', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('date_derniere_activite', models.DateTimeField(auto_now=True)),
                ('alerte_inactivite_envoyee', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agent_prospecteur', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'agent_prospection'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clients_prospectes', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='client_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'ordering': ['company_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='BacPoubelle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_bac', models.CharField(max_length=50, unique=True)),
                ('type_bac', models.CharField(choices=[('plastique_120L', 'Plastique 120L'), ('plastique_240L', 'Plastique 240L'), ('metal_120L', 'Métal 120L'), ('metal_240L', 'Métal 240L'), ('conteneur_660L', 'Conteneur 660L'), ('conteneur_1100L', 'Conteneur 1100L')], max_length=20)),
                ('capacite_litres', models.IntegerField()),
                ('status', models.CharField(choices=[('actif', 'Actif'), ('endommage', 'Endommagé'), ('perdu', 'Perdu'), ('remplace', 'Remplacé')], default='actif', max_length=15)),
                ('date_installation', models.DateField()),
                ('date_derniere_collecte', models.DateTimeField(blank=True, null=True)),
                ('emplacement_description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bacs', to='clients.client')),
            ],
            options={
                'verbose_name': 'Bac/Poubelle',
                'verbose_name_plural': 'Bacs/Poubelles',
                'ordering': ['client', 'numero_bac'],
            },
        ),
        migrations.CreateModel(
            name='Contrat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_contrat', models.CharField(max_length=50, unique=True)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('frequence_collecte', models.CharField(choices=[('quotidien', 'Quotidien'), ('bi_hebdomadaire', 'Bi-hebdomadaire'), ('hebdomadaire', 'Hebdomadaire'), ('bi_mensuel', 'Bi-mensuel'), ('mensuel', 'Mensuel')], max_length=20)),
                ('jours_collecte', models.JSONField(default=list)),
                ('heure_passage', models.TimeField()),
                ('tarif_mensuel', models.DecimalField(decimal_places=2, max_digits=10)),
                ('devise', models.CharField(default='TND', max_length=3)),
                ('types_dechets', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('actif', 'Actif'), ('expire', 'Expiré'), ('resilie', 'Résilié'), ('suspendu', 'Suspendu')], default='actif', max_length=10)),
                ('conditions_particulieres', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contrats', to='clients.client')),
            ],
            options={
                'verbose_name': 'Contrat',
                'verbose_name_plural': 'Contrats',
                'ordering': ['-date_debut'],
            },
        ),
        migrations.CreateModel(
            name='DemandeProspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_complet', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('telephone', models.CharField(max_length=20)),
                ('company_name', models.CharField(blank=True, max_length=200)),
                ('adresse', models.TextField()),
                ('ville', models.CharField(max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('type_service', models.CharField(choices=[('particulier_standard', 'Particulier - Service standard'), ('particulier_premium', 'Particulier - Service premium'), ('entreprise_petite', 'Entreprise - Petite structure'), ('entreprise_moyenne', 'Entreprise - Moyenne structure'), ('entreprise_grande', 'Entreprise - Grande structure'), ('institution', 'Institution publique')], max_length=30)),
                ('frequence_souhaitee', models.CharField(blank=True, max_length=20)),
                ('message', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('en_attente', 'En attente'), ('assignee', 'Assignée à un agent'), ('en_cours', 'En cours de traitement'), ('validee', 'Validée'), ('refusee', 'Refusée'), ('client_cree', 'Client créé')], default='en_attente', max_length=20)),
                ('date_demande', models.DateTimeField(auto_now_add=True)),
                ('date_assignation', models.DateTimeField(blank=True, null=True)),
                ('date_visite_prevue', models.DateTimeField(blank=True, null=True)),
                ('date_traitement', models.DateTimeField(blank=True, null=True)),
                ('notes_agent', models.TextField(blank=True)),
                ('raison_refus', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agent_assigne', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'agent_prospection'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demandes_assignees', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Demande de prospection',
                'verbose_name_plural': 'Demandes de prospection',
                'ordering': ['-date_demande'],
            },
        ),
        migrations.CreateModel(
            name='ZoneCollecte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_zone', models.CharField(max_length=100)),
                ('code_zone', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('couleur', models.CharField(default='#1e3a8a', max_length=7)),
                ('coordonnees_zone', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('responsable', models.ForeignKey(blank=True, limit_choices_to={'user_type__in': ['manager', 'admin']}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Zone de collecte',
                'verbose_name_plural': 'Zones de collecte',
                'ordering': ['nom_zone'],
            },
        ),
        migrations.AddField(
            model_name='client',
            name='zone_collecte',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clients', to='clients.zonecollecte'),
        ),
    ]
